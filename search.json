[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Programação Matemática",
    "section": "",
    "text": "1 Programação Matemática\nEssas notas de aula seguem a ementa da disciplina GCC118 – Programação Matemática\nda Universidade Federal de Lavras (UFLA).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Programação Matemática</span>"
    ]
  },
  {
    "objectID": "index.html#ementa",
    "href": "index.html#ementa",
    "title": "Programação Matemática",
    "section": "1.1 Ementa",
    "text": "1.1 Ementa\nModelagem. Fundamentos de programação matemática. Programação linear e suas aplicações.\nMétodo simplex. Análise de sensibilidade e dualidade. Otimização em redes.\nProgramação dinâmica.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Programação Matemática</span>"
    ]
  },
  {
    "objectID": "index.html#bibliografia-básica",
    "href": "index.html#bibliografia-básica",
    "title": "Programação Matemática",
    "section": "1.2 Bibliografia Básica",
    "text": "1.2 Bibliografia Básica\n\nHillier, F. S.; Lieberman, G. J. Introdução à Pesquisa Operacional. AMGH, 2013.\n\nArenales, M. et al. Pesquisa Operacional. Elsevier, 2007.\n\nTaha, H. A. Pesquisa Operacional: uma visão geral. Pearson, 2008.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Programação Matemática</span>"
    ]
  },
  {
    "objectID": "index.html#autores",
    "href": "index.html#autores",
    "title": "Programação Matemática",
    "section": "1.3 Autores",
    "text": "1.3 Autores\n\nAndreza C. Beezão Moreira (DMM/UFLA)\n\nandreza.moreira@ufla.br\n\nMayron César O. Moreira (DCC/UFLA)\n\nmayron.moreira@ufla.br",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Programação Matemática</span>"
    ]
  },
  {
    "objectID": "03-simplex.html",
    "href": "03-simplex.html",
    "title": "2  Simplex",
    "section": "",
    "text": "2.1 Inicialização do Método Simplex\nEm determinados contextos, a partição básica factível inicial nem sempre é trivial de ser obtida. Para tanto, considere o problema descrito abaixo.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Simplex</span>"
    ]
  },
  {
    "objectID": "03-simplex.html#inicialização-do-método-simplex",
    "href": "03-simplex.html#inicialização-do-método-simplex",
    "title": "2  Simplex",
    "section": "",
    "text": "Problema da empresa de manufatura\nUma empresa fabrica dois produtos, A e B. O lucro unitário é 3 para A e 2 para B. O contrato com um cliente exige que a soma das produções seja pelo menos 4 unidades. Cada unidade fabricada do produto A requer 6h de produção da máquina, enquanto o produto B requer 2h de trabalho da máquina. Considere a capacidade diária de funcionamento da máquina igual a 12h, e que os produtos, uma vez definidas as quantidades, são produzidos de forma sequencial (não importando a ordem).\nPergunta: Quantas unidades de cada produto devem ser produzidas para maximizar o lucro?\n\nVariáveis de decisão:\n\n\\(x_1 \\ge 0\\): quantidade de produtos A;\n\n\\(x_2 \\ge 0\\): quantidade de produtos B.\n\n\n\nModelo matemático:\n\\[\n\\max f(x_1,x_2) = 3x_1 + 2x_2\n\\]\nSujeito a:\n\\[\n\\begin{cases}\nx_1 + x_2 \\geq 4 \\\\\n6x_1 + 2x_2 \\leq 12 \\\\\nx_1, x_2 \\geq 0\n\\end{cases}\n\\]\n\n\nRepresentação gráfica do problema\n\n\nValores da função objetivo nos vértices:\nf(0, 4) = 3×0 + 2×4 = 8\nf(1, 3) = 3×1 + 2×3 = 9\nf(0, 6) = 3×0 + 2×6 = 12\nf(0, 0) = 3×0 + 2×0 = 0\nf(2, 0) = 3×2 + 2×0 = 6\n\n\n\n\n\n\n\n\n\n\nSolução ótima: x₁ = 0, x₂ = 6\nValor máximo da função objetivo: f = 12\n\n\nConvertendo o problema na forma padrão, temos:\n\\[\n\\max f(x_1,x_2,x_3,x_4) = -3x_1 -2x_2 + 0x_3 + 0x_4\n\\]\nSujeito a:\n\\[\n\\begin{cases}\nx_1 + x_2 - x_3 = 4 \\\\\n6x_1 + 2x_2 + x_4 = 12 \\\\\nx_1, x_2, x_3, x_4 \\geq 0\n\\end{cases}\n\\]\nem que \\(x_3\\) é uma variável de acesso, e \\(x_4\\) é uma variável de folga. Note que escolha pelas colunas \\(x_3\\) e \\(x_4\\) como variáveis básicas não gera uma solução básica factível, pois \\(x_3 = -4 &lt; 0\\). Assim, não é possível iniciar o método simplex diretamente.\nDiante disso, é necessário utilizar o Método das Duas Fases ou Método Big-M para encontrar uma solução básica factível inicial.\n\n\n\nMétodo das Duas Fases\nO Método das Duas Fases consiste em resolver um problema artificial na Fase 1, que visa encontrar uma solução básica factível para o problema original. Na Fase 2, o método simplex é aplicado ao problema original, utilizando a solução obtida na Fase 1 como ponto de partida. Para o problema em questão, a Fase 1 pode ser formulada da seguinte maneira:\n\\[\n\\min z = y\n\\]\nSujeito a:\n\\[\n\\begin{cases}\nx_1 + x_2 - x_3 + y = 4 \\\\\n6x_1 + 2x_2 + x_4 = 12 \\\\\nx_1, x_2, x_3, x_4, y \\geq 0\n\\end{cases}\n\\]\nem que \\(y\\) é uma variável artificial. Note que se a solução ótima da Fase 1 for \\(z = 0\\), então a solução básica factível encontrada pode ser utilizada como ponto de partida para a Fase 2. Caso contrário, o problema original não possui solução viável.\nDe forma genérica, representa-se o problema da Fase 1 na forma matricial:\n\\[\n\\min \\sum_{i=1}^n y_n\n\\]\nSujeito a:\n\\[\n\\begin{cases}\nAx + Iy = b \\\\\nx, y \\geq 0\n\\end{cases}\n\\]\nem que \\(A \\in \\mathbb{R}^{m \\times n}\\) é a matriz dos coeficientes das variáveis originais, \\(I \\in \\mathbb{R}^{m \\times m}\\) é a matriz identidade associada às variáveis artificiais, \\(x \\in \\mathbb{R}^n\\) é o vetor das variáveis originais, \\(y \\in \\mathbb{R}^m\\) é o vetor das variáveis artificiais, e \\(b \\in \\mathbb{R}^m\\) é o vetor dos termos independentes. Note que \\(A\\) deve ser uma matriz de posto completo, ou seja, \\(\\text{rank}(A) = m\\).\nAgora, basta resolver o problema da Fase I utilizando o método simplex. Caso a solução ótima seja zero, a solução básica factível encontrada pode ser utilizada como ponto de partida para a Fase 2, que consiste em resolver o problema original utilizando o método Simplex (novamente).\n\n\nMétodo Big-M\nO Método Big-M consiste em adicionar penalidades elevadas às variáveis artificiais na função objetivo do problema original. Assim, o método simplex é aplicado diretamente ao problema modificado, buscando minimizar a função objetivo penalizada. Para o problema em questão, a função objetivo modificada pode ser formulada da seguinte maneira:\n\\[\n\\max f(x_1,x_2,x_3,x_4,y) = -3x_1 -2x_2 + 0x_3 + 0x_4 - My\n\\]\nSujeito a:\n\\[\n\\begin{cases}\nx_1 + x_2 - x_3 + y = 4 \\\\\n6x_1 + 2x_2 + x_4 = 12 \\\\\nx_1, x_2, x_3, x_4, y \\geq 0\n\\end{cases}\n\\]\nem que \\(M\\) é uma constante grande e positiva. Note que a escolha de \\(M\\) deve ser suficientemente grande para garantir que as variáveis artificiais sejam eliminadas da solução ótima, caso o problema original possua solução viável. Isso traz uma dificuldade prática sem sua utilização, pois o valor de \\(M\\) pode influenciar a estabilidade numérica do método Simplex, especialmente na atualização da matriz inversa. Logo, tenha muito cuidado ao escolher o valor dessa constante.\nDe forma genérica, representa-se o problema na forma matricial da seguinte forma:\n\\[\n\\max c^Tx - My^Te\n\\]\nSujeito a:\n\n\\[\n\\begin{cases}\nAx + Iy = b \\\\\nx, y \\geq 0\n\\end{cases}\n\\]\n\nExercícios\n\nConsidere o seguinte problema de programação linear:\n\\[\n\\min f(x_1,x_2) = 2x_1 + x_2\n\\]\nSujeito a:\n\\[\n\\begin{cases}\n-2x_1 + 3x_2 \\geq 9 \\\\\n3x_1 + 2x_2 \\geq 12 \\\\\nx_1, x_2 \\geq 0\n\\end{cases}\n\\]\n\nConverta o problema para a forma padrão.\n\nDesenhe graficamente a região viável e identifique os vértices.\n\nUtilize o Método das Duas Fases para encontrar uma solução básica factível inicial.\n\n\n\nA partir da solução obtida na Fase 1, aplique o método Simplex para encontrar a solução ótima do problema original.\n\n\n\nUtilize o Método Big-M para encontrar a solução ótima do problema. Tome \\(M = 100\\).\n\n\nO que pode-se concluir de um problema de programação linear quando a solução ótima da Fase 1 do Método das Duas Fases é maior que zero? Justifique sua resposta algebricamente.\nDe forma geral, é possivel afirmar que o problema artificial (Método das Duas Fases) possui múltiplas soluções ótimas? Justifique sua resposta.\nSuponha que a execução do Método Big-M tenha retornado uma solução ótima em que uma ou mais variáveis artificiais permanecem na base com valor positivo. O que pode-se concluir sobre o problema original? Justifique sua resposta.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Simplex</span>"
    ]
  },
  {
    "objectID": "05-otimizacao-discreta.html",
    "href": "05-otimizacao-discreta.html",
    "title": "3  Métodos de Otimização Discretos",
    "section": "",
    "text": "3.1 Modelos de Programação Inteira\nNa primeira parte do curso, estudamos métodos de otimização contínuos, onde as variáveis de decisão podem assumir qualquer valor real. No entanto, muitos problemas do mundo real exigem que as variáveis sejam discretas, ou seja, assumam valores inteiros ou binários. Esses problemas são conhecidos como problemas de otimização discreta e incluem uma ampla gama de aplicações, desde a alocação de recursos até o planejamento de rotas.\nUma pergunta natural que surge é: por que precisamos de métodos específicos para otimização discreta? E se utilizássemos o arredondamento de soluções ótimas fracionárias obtidas, por exemplo, pelo Método Simplex? Apesar da hipótese não ser de toda a forma errada, o arredondamento pode levar a soluções inviáveis ou subótimas. Vejamos um exemplo abaixo, extraído da obra de (Wolsey 1998).\n\\[\n\\max f(x_1,x_2) = x_1 + 0,64x_2\n\\]\nSujeito a:\n\\[\n\\begin{cases}\n50x_1 + 31x_2 \\leq 250 \\\\\n3x_1 - 2x_2 \\geq -4 \\\\\nx_1, x_2 \\in \\mathbb{Z}_+\n\\end{cases}\n\\]\nO gráfico da região viável é apresentado a seguir:\nNote que o ponto ótimo fracionário (obtido pelo método simplex) é \\((\\frac{376}{193}, \\frac{950}{193}) \\approx (1,95; 4,92)\\), com valor da função objetivo \\(f \\approx 4,14\\). Se arredondarmos esse ponto para o inteiro mais próximo, obteremos a solução \\((2, 5)\\), que é inviável. A solução ótima inteira é \\((5, 0)\\), com valor da função objetivo \\(f = 5\\). Isso ilustra que nem sempre um arredondamento simples resolverá o problema, evidenciando a importância de métodos específicos para otimização discreta.\nNosso objetivo é encontrar a envoltória convexa dos pontos inteiros viáveis e, em seguida, determinar o ponto que maximiza (ou minimiza) a função objetivo dentro dessa envoltória. No entanto, essa tarefa pode ser computacionalmente desafiadora, especialmente para problemas de grande escala. Formalmente, define-se o conceito de envoltória convexa inteira da seguinte forma.\nA figura abaixo apresenta um exemplo de comparação de formulações, em que a formulação P1 é a mais fraca (maior área), P2 é intermediária e P3 é a mais forte (envoltória convexa dos pontos inteiros viáveis).\nE quando não temos os gráficos das formulações, para que visualmente comparemos as forças das formulações? Como saber qual é a melhor? Considere um problema com quatro variáveis de decisão binárias \\(x_1, x_2, x_3, x_4 \\in \\{0,1\\}\\). A formulação \\(P_1\\) é dada por:\n\\[\nx_2 + x_3 + x_4 \\le 3x_1\n\\]\nJá a formulação \\(P_2\\) é dada por:\n\\[\n\\begin{alignat*}{1}\nx_2 \\le x_1 \\\\\nx_3 \\le x_1 \\\\\nx_4 \\le x_1\n\\end{alignat*}\n\\]\nEm ambos os casos, o conjunto de soluções inteiras viáveis é o mesmo, ou seja, \\(\\mathcal{X} = \\{(0,0,0,0), (1,0,0,0), (1,1,0,0), (1,1,1,0), (1,1,1,1)\\}\\). O conjunto de restrições ativa a variável \\(x_1\\) em 1 se qualquer uma das variáveis \\(x_2, x_3\\) ou \\(x_4\\) for 1. No entanto, a formulação \\(P_2\\) é mais forte do que \\(P_1\\), pois sua envoltória convexa é menor e mais próxima dos pontos inteiros viáveis. Isso pode ser verificado da seguinte forma: uma solução viável para o problema relaxado (onde as variáveis podem assumir valores fracionários) é dada por:\n- \\((x_1, x_2, x_3, x_4) = (\\frac{1}{3}, 1, 1, 1)\\) é viável para \\(P_1\\) (pois \\(1 + 1 + 1 \\le 3\\times\\frac{1}{3}\\)), mas não é viável para \\(P_2\\), pois \\(1\\) não é menor ou igual a \\(\\frac{1}{3}\\).\nDiante disso, pode-se dizer que \\(P_2\\) é uma formulação que domina \\(P_1\\). Formalmente, define-se o conceito de formulação dominante da seguinte forma.\nWolsey (1998) define os problemas de programação inteira estudados neste curso como segue:\nProblema de Programação Linear Inteiro Misto\n\\[\n\\begin{align}\n\\max \\quad & cx + dy \\\\\n\\text{s.a.} \\quad & Ax + Gy \\leq b \\\\\n& x \\geq 0, y \\geq 0 \\text{ e inteiro}\n\\end{align}\n\\]\nProblema de Programação Linear Inteiro\n\\[\n\\begin{align}\n\\max \\quad & cx \\\\\n\\text{s.a.} \\quad & Ax \\leq b \\\\\n& x \\geq 0 \\text{ e inteiro}\n\\end{align}\n\\]\nProblema de Programação Binária\n\\[\n\\begin{align}\n\\max \\quad & cx \\\\\n\\text{s.a.} \\quad & Ax \\leq b \\\\\n& x \\in \\{0,1\\}^n\n\\end{align}\n\\]\nConsidere o exemplo do problema de mix de produção de mesas e cadeiras feitas com peças de Lego, apresentado em (Cochran 2015). A maneira correta de considerar sua formulação é como um problema de programação inteira, uma vez que não faz sentido produzir uma fração de uma mesa ou cadeira. O modelo matemático mais propriado para descrever o problema é dado por:\nFunção Objetivo\n\\[\n\\max Z = 16x_1 + 10x_2\n\\]\nMaximizar o lucro total, onde cada mesa gera lucro de 16 unidades monetárias e cada cadeira gera lucro de 10 unidades monetárias.\nRestrições\n\\[\n\\begin{align}\n2x_1 + 2x_2 &\\leq 8 \\quad \\text{(peças pequenas)} \\\\\n2x_1 + x_2 &\\leq 6 \\quad \\text{(peças grandes)} \\\\\n\\end{align}\n\\]\nRestrições de recursos, em que a primeira limita o uso de peças pequenas a 8 unidades e a segunda limita o uso de peças grandes a 6 unidades.\nNão-negatividade\n\\[\nx_1, x_2 \\in \\mathbb{Z}^+.\n\\]\nAs próximas seções exploram diferentes formas de modelar problemas de otimização discreta, além da apresentação de alguns problemas clássicos de otimização com variáveis inteiras ou binárias.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Métodos de Otimização Discretos</span>"
    ]
  },
  {
    "objectID": "05-otimizacao-discreta.html#modelos-de-programação-inteira",
    "href": "05-otimizacao-discreta.html#modelos-de-programação-inteira",
    "title": "3  Métodos de Otimização Discretos",
    "section": "",
    "text": "\\(x_1\\) = número de mesas a produzir\n\\(x_2\\) = número de cadeiras a produzir",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Métodos de Otimização Discretos</span>"
    ]
  },
  {
    "objectID": "05-otimizacao-discreta.html#modelagem-com-variáveis-discretas",
    "href": "05-otimizacao-discreta.html#modelagem-com-variáveis-discretas",
    "title": "3  Métodos de Otimização Discretos",
    "section": "3.2 Modelagem com variáveis discretas",
    "text": "3.2 Modelagem com variáveis discretas\nA modelagem de problemas de otimização com variáveis discretas envolve a definição de variáveis que podem assumir apenas valores inteiros ou binários. Isso é particularmente útil em situações onde as decisões a serem tomadas são discretas por natureza, como a seleção de itens, alocação de recursos ou programação de tarefas. A seguir, são apresentados alguns exemplos de modelagem com variáveis discretas. Os exemplos discutidos são baseados em (Arenales et al. 2007), (Coelho 2013) e (Asghari et al. 2022).\n\n3.2.1 Implicações “se-então”\n\nConsidere a seguinte situação: a produção do item “A” implica em um custo fixo de preparação da máquina. Podemos analisar esta situação a partir da Figura abaixo e da função \\(K(x)\\), apresentada a seguir:\n\n\\[\nK(x) =\n\\begin{cases}\ns + cx, & x&gt;0 \\\\\n0, & x = 0\n\\end{cases}\n\\]\nem que \\(x \\in \\mathbb{Z}\\) indica a quantidade do item “A” produzida, \\(s\\) é o custo de preparação da máquina e \\(c\\) é o custo de produzir uma unidade de “A”. Como podemos modelar \\(K(x)\\) de maneira linear?\n\nConsidere a seguinte situação: se o item “A” for fabricado, o item “B” também será fabricado, a uma quantidade de pelo menos \\(m\\) unidades. Como modelamos estas restrições linearmente?\nSuponha que 4 itens podem ser produzidos em uma máquina denotada por \\(k\\), e se o item 1 é produzido em \\(k\\), então os outros itens 2, 3 e 4 não podem ser processados em \\(k\\) e devem ser processados em outras máquinas. Como modelar essas condições?\n\n\n\n\n3.2.2 Ativação/desativação de restrições\nConsidere uma restrição \\(x_1 + x_2 - 10 \\le 0\\). Desejamos que essa restrição seja ativada (considerada) se \\(y=0\\) e desativada (ignorada) se \\(y=1\\), em que \\(y \\in \\{0,1\\}\\). Como modelar essa situação linearmente?\n\n\n\n3.2.3 Restrições disjuntivas\nConsidere as seguintes restrições: \\((i) 4x_1 + 2x_2 \\le 80\\) e \\((ii) 2x_1 + 5x_2 \\le 100\\), \\(x_1, x_2 \\ge 0\\). Quando \\(4x_1 + 2x_2 - 80 \\le 0\\) (restrição ativada), desejamos que a reta de \\((ii)\\) seja transladada para \\(2x_1 + 5x_2 \\le 200\\). Por outro lado, se \\(2x_1 + 5x_2 - 100 \\le 0\\), desejamos que a reta em \\((i)\\) seja transladada para \\(4x_1 + 2x_2 \\le 200\\). Como modelar essa situação linearmente?\n\n\n\n3.2.4 Representação de função linear por partes\nConsidere uma função de custo de produção \\(C(x)\\) que varia de acordo com a quantidade produzida:\n\\[\nC(x) = \\begin{cases}\n5x & \\text{se } 0 \\leq x \\leq 100 \\\\\n500 + 3x & \\text{se } 100 &lt; x \\leq 200 \\\\\n800 + 2x & \\text{se } 200 &lt; x \\leq 300 \\\\\n1400 + x & \\text{se } x &gt; 300\n\\end{cases}\n\\]\nInterpretação: O custo unitário diminui conforme a produção aumenta (economias de escala).\nLinearização\nVariáveis de Decisão:\n\n\\(x\\): quantidade total produzida\n\\(x_1\\): quantidade produzida na faixa \\([0, 100]\\)\n\\(x_2\\): quantidade produzida na faixa \\((100, 200]\\)\n\\(x_3\\): quantidade produzida na faixa \\((200, 300]\\)\n\\(x_4\\): quantidade produzida na faixa \\((300, \\infty)\\)\n\\(y_1, y_2, y_3, y_4 \\in \\{0,1\\}\\): variáveis binárias indicando se cada faixa é utilizada\n\nModelo Linearizado\n\\[\n\\begin{align}\n\\min \\quad & C = 5x_1 + 3x_2 + 2x_3 + x_4 + 500y_2 + 800y_3 + 1400y_4 \\\\\n\\text{s.a.} \\quad & x = x_1 + x_2 + x_3 + x_4 \\\\\n& x_1 \\leq 100y_1 \\\\\n& x_2 \\leq 100y_2 \\\\\n& x_3 \\leq 100y_3 \\\\\n& x_4 \\leq My_4 \\quad \\text{(M suficientemente grande)} \\\\\n& y_1 \\geq y_2 \\geq y_3 \\geq y_4 \\quad \\text{(ordem de ativação)} \\\\\n& y_1 \\leq 1 \\\\\n& x_1, x_2, x_3, x_4 \\geq 0 \\\\\n& y_1, y_2, y_3, y_4 \\in \\{0,1\\}\n\\end{align}\n\\]\nRestrições Explicadas\n\nDecomposição da produção: \\(x = x_1 + x_2 + x_3 + x_4\\)\nLimites por faixa: Cada \\(x_i\\) só pode ser positivo se \\(y_i = 1\\)\nOrdem sequencial: As faixas devem ser preenchidas em ordem (\\(y_1 \\geq y_2 \\geq y_3 \\geq y_4\\))\nCustos fixos: Os termos \\(500y_2\\), \\(800y_3\\) e \\(1400y_4\\) representam os custos fixos acumulados\n\n\n\n\n3.2.5 Relações lógicas\nUma empresa dispõe de cinco possibilidades de investimento. Modele os seguintes casos:\n\nNo máximo três investimentos devem ser selecionados.\n\nO investimento 1 ou 2 é selecionado.\n\nSe o investimento 2 é selecionado, então o investimento 1 será selecionado.\n\nSe os investimentos 2, 3 ou 4 são selecionados, então o investimento 1 é selecionado.\n\n\n\n\n3.2.6 Representação de valores discretos\nSuponha que a variável \\(x \\in \\{4,6,8,12,20,24\\}\\). Como definir \\(x\\) em um problema inteiro?\n\n\n\n3.2.7 Linearizações mais complexas\nExemplos de linearizações que contemplam produtos entre variáveis binárias e contínuas, produtos entre variáveis binárias, produtos entre variáveis inteiras, função modular, entre outros, podem ser vistos em (Coelho 2013) e (Asghari et al. 2022).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Métodos de Otimização Discretos</span>"
    ]
  },
  {
    "objectID": "05-otimizacao-discreta.html#problemas-clássicos-de-otimização-discreta",
    "href": "05-otimizacao-discreta.html#problemas-clássicos-de-otimização-discreta",
    "title": "3  Métodos de Otimização Discretos",
    "section": "3.3 Problemas clássicos de otimização discreta",
    "text": "3.3 Problemas clássicos de otimização discreta\nO ex-jogador de futebol Jardel já dizia: “Clássico é clássico e vice-versa”. A frase, mesmo que encarada de forma “extrovertida”, mostra a relevância de voltar o foco para os clássicos, que emergem eventos esportivos singulares, parte da tradição ludopédica regional. Em Pesquisa Operacional, as formulações dos problemas clássicos são de extrema importância, pois servem como base para o desenvolvimento de novos modelos e algoritmos. A seguir, são apresentados alguns dos problemas clássicos de otimização discreta, juntamente com suas formulações matemáticas. Os exemplos discutidos são baseados em (hillier2013introducao?), (Arenales et al. 2007) e (taha2008operations?).\n\n3.3.1 Pokemon Go Problem\nO problema do Pokemon Go é um exemplo clássico de otimização discreta, onde o objetivo é capturar um conjunto de Pokemons em um mapa, minimizando a distância percorrida pelo jogador. Como formular esse problema?\n\n\n\nPokemonGo Problem - Figura gerada pelo Gemini\n\n\nFigura: Exemplo do problema do Pokemon Go, onde o objetivo é otimizar a captura de Pokemons em um mapa, minimizando a distância percorrida pelo jogador.\n\n\n3.3.2 Problema da Mochila (Knapsack Problem)\nO problema da mochila é um problema clássico de otimização discreta, onde o objetivo é maximizar o valor total dos itens colocados em uma mochila, sem exceder sua capacidade. Considere uma mochila com capacidade \\(W\\) e um conjunto de \\(n\\) itens, cada um com peso \\(w_i\\) e valor \\(v_i\\). Como formular esse problema?\n\n\n\nProblema da Mochila - Figura gerada pelo Gemini\n\n\nFigura: Exemplo do problema da mochila, onde o objetivo é maximizar o valor total dos itens colocados em uma mochila, sem exceder sua capacidade.\n\n\n\n\nArenales, M., V. Armentano, R. Morabito, and H. Yanasse. 2007. Pesquisa Operacional. Elsevier.\n\n\nAsghari, Mohammad, Amir M. Fathollahi-Fard, S. M. J. Mirzapour Al-e-hashem, and Maxim A. Dulebenets. 2022. “Transformation and Linearization Techniques in Optimization: A State-of-the-Art Survey.” Mathematics 10 (2): 283. https://doi.org/10.3390/math10020283.\n\n\nCochran, James J. 2015. “Extending ‘Lego My Simplex’.” INFORMS Transactions on Education 15 (3): 224–31. https://doi.org/10.1287/ited.2015.0139.\n\n\nCoelho, Leandro C. 2013. “Linearization of the Product of Two Variables.” https://www.leandro-coelho.com/linearization-product-variables/.\n\n\nWolsey, Laurence A. 1998. Integer Programming. New York: Wiley-Interscience.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Métodos de Otimização Discretos</span>"
    ]
  }
]